name: Build and Push to ECR

on:
  workflow_dispatch:
  repository_dispatch:
    types: [ready-to-build]
    
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - uses: tj-actions/changed-files@v44
      id: chg
      with:
        dir_names: |
          frontend
          backend/list-service
          backend/email-service
          backend/metric-service
    - name: Build service list JSON
      id: set
      run: |
        SERVICES=$(echo "${{ steps.chg.outputs.all_changed_and_modified_files }}" \
          | tr ' ' '\n' | cut -d/ -f1-2 | sort -u \
          | sed -E 's#^(frontend)$#\1#;s#^backend/##;s#/.+$##' )
        jq -n --arg s "$SERVICES" '$s|split("\n")|map(select(. != ""))' \
          > tmp.json
        echo "matrix=$(cat tmp.json)" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        svc: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS creds (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-west-2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: ECR login
      env: 
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} }
      run: |
        aws ecr get-login-password --region us-west-2 \
          | docker login --username AWS --password-stdin \
            "$AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com"

    - name: Build & push ${{ matrix.svc }}
      env:
        TAG: ${{ github.sha }}
        AWS_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        ./scripts/build-and-push.sh "${{ matrix.svc }}" "$TAG" "$AWS_ID"
