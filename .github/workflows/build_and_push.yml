name: Build and Push to ECR

on:
  workflow_dispatch:
    inputs:
      build_all:
        description: "Build EVERY service (ignore change detection)?"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]

jobs:
  build_and_push_all:
    if: ${{ github.event.inputs.build_all == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Make build script executable
        run: chmod +x ./build_and_push.sh
      - name: Build and Push Services
        run: |
          services="frontend backend/list-service backend/email-service backend/metric-service"
          for service in $services; do
            ./build_and_push.sh service x x 
          done

  detect_changes:
    if: ${{ github.event.inputs.build_all != 'true' }}
    runs-on: ubuntu-latest
    outputs:
      changed_dirs: ${{ steps.export.outputs.changed_dirs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: tj-actions/changed-files@v44
        id: changed-files
        with:
          dir_names: "true"
      - name: Export changed dirs
        id: export
        run: |
          echo "changed_dirs=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_OUTPUT

  build_and_push_with_change:
    if: ${{ github.event.inputs.build_all != 'true' && needs.detect-changes.outputs.changed_dirs != '' }}
    needs: detect_changes
    runs-on: ubuntu-latest
    steps:
      - name: Make build script executable
        run: chmod +x ./build_and_push.sh
      - name: Build and Push Services
        env:
          CHANGED_DIRS: ${{ needs.detect-changes.outputs.changed_dirs }}
        run: |
          echo "Building only changed services: $CHANGED_DIRS"
          for dir in $CHANGED_DIRS; do
            echo "Building $dir..."
            # script here
          done
